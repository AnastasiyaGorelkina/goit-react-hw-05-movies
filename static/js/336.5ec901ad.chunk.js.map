{"version":3,"file":"static/js/336.5ec901ad.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAc,mCAAG,sGACHC,EAAAA,EAAAA,IAAA,UAChBH,EADgB,sCACsBC,IAFnB,uBAClBG,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,qDAOdC,EAAY,mCAAG,WAAMC,GAAN,yFACDH,EAAAA,EAAAA,IAAA,UAChBH,EADgB,iCACiBC,EADjB,kBACkCK,EADlC,+CADC,uBAChBF,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAOZG,EAAgB,mCAAG,WAAMC,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAChBH,EADgB,kBACEQ,EADF,oBACqBP,EADrB,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOhBK,EAAgB,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAChBH,EADgB,kBACEQ,EADF,4BAC6BP,EAD7B,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOhBM,EAAgB,mCAAG,WAAMF,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAChBH,EADgB,kBACEQ,EADF,4BAC6BP,EAD7B,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,qD,iJC/BhBO,E,OAASC,EAAAA,GAAH,4E,iBC+CnB,EA3Ca,WACT,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQX,GAAYY,EAAAA,EAAAA,MAAZZ,QAEAa,EAASP,EAATO,KAkBR,OAfAC,EAAAA,EAAAA,YAAU,WACV,IAAMC,EAAS,mCAAG,8GAEKd,EAAAA,EAAAA,IAAiBD,GAFtB,OAERJ,EAFQ,OAGdW,EAAUX,GACVa,EAAU,YAJI,gDAMdE,EAAS,EAAD,IACRF,EAAU,YAPI,yDAAH,qDAWfM,GACE,GAAE,CAACf,KAGD,gCACgB,YAAXQ,GAAwB,aACb,aAAXA,IAAyB,wBAAKE,EAAMM,UACzB,aAAXR,IACG,UAACL,EAAD,WACqB,IAAhBU,EAAKI,SAAiB,6EACtBJ,GAAQA,EAAKK,KAAI,SAAAC,GAAE,OAChB,2BACI,SAAC,KAAD,UAAOA,EAAGC,QACV,gBAAKC,IAAG,UA7BhB,oCA6BgB,OAAeF,EAAGG,cAAgBC,IAAKJ,EAAGC,KAAMI,MAAM,YAFzDL,EAAGM,GADI,SAUvC,C,0VC5CYC,EAAOtB,EAAAA,EAAAA,GAAH,iHAOJuB,EAAYvB,EAAAA,EAAAA,IAAH,6FAMTwB,GAASxB,EAAAA,EAAAA,GAAOyB,EAAAA,GAAPzB,CAAH,mPAkBN0B,GAAO1B,EAAAA,EAAAA,GAAOyB,EAAAA,GAAPzB,CAAH,iKAYJ2B,EAAO3B,EAAAA,EAAAA,EAAH,iEAKJ4B,EAAe5B,EAAAA,EAAAA,IAAH,wDAKZ6B,EAAM7B,EAAAA,EAAAA,IAAH,+FAMH8B,EAAQ9B,EAAAA,EAAAA,MAAH,kIAQL+B,EAAO/B,EAAAA,EAAAA,KAAH,sHAOJgC,EAAShC,EAAAA,EAAAA,OAAH,0RAiBNiC,EAAQjC,EAAAA,EAAAA,MAAH,4F","sources":["api/api.jsx","components/Cast/CastStyled.jsx","components/Cast/Cast.jsx","components/styled.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f71bf03a4d080c1adbb88d731b31a8f7';\n\nexport const getTrendMovies = async () => {\n    const { data } = await axios.get(\n        `${BASE_URL}/trending/all/week?api_key=${API_KEY}`\n    );\n    return data;\n};\n\nexport const searchMovies = async query => {\n    const { data } = await axios.get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_abult=false&language=en-US&page=1`\n    );\n    return data;\n};\n\nexport const getMoviesDeteils = async movieId => {\n    const { data } = await axios.get(\n        `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n};\n\nexport const getMoviesCredits = async movieId => {\n    const { data } = await axios.get(\n        `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n};\n\nexport const getMoviesReviews = async movieId => {\n    const { data } = await axios.get(\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n};","import styled from '@emotion/styled';\n\nexport const Actors = styled.ul`\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n`;\n\n","import { useEffect, useState } from \"react\";\nimport { getMoviesCredits } from \"api/api\";\nimport { useParams } from \"react-router-dom\";\nimport { Actors } from \"./CastStyled\";\nimport { Text } from \"components/styled\";\n\nconst Cast = () => {\n    const [actors, setActors] = useState([]);\n    const [status, setStatus] = useState(null);\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n    const baseUrl = 'https://image.tmdb.org/t/p/w500/';\n    const { cast } = actors;\n   \n    \n    useEffect(() => {\n    const getActors = async () => {\n      try {\n        const data = await getMoviesCredits(movieId);\n        setActors(data);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error);\n        setStatus('rejected');\n      }\n    };\n\n    getActors();\n     }, [movieId]);\n    \n    return (\n        <>\n            {status === 'pending' && 'Loading...'}\n            {status === 'rejected' && <h3>{error.message}</h3>}\n            {status === 'resolved' && (\n                <Actors>\n                    {cast.length === 0 && (<h1>We don't have any information about the cast yet</h1>)}\n                    {cast && cast.map(el => (\n                        <li key={el.id}>\n                            <Text>{el.name}</Text>\n                            <img src={`${baseUrl}${el.profile_path}`} alt={el.name} width=\"170px\" />\n                        </li>))}\n                </Actors>\n            )}\n\n        </>\n    );\n};\n\nexport default Cast;","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  font-size: 30px;\n  align-items: center;\n`;\n\nexport const Conteiner = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Linker = styled(Link)`\n  font-weight: 600;\n  color: black;\n  text-decoration: none;\n  font-size: 25px;\n  padding: 5px;\n  display: inline-block;\n\n  &:active {\n    color: green;\n  }\n\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n\nexport const Back = styled(Link)`\n  font-size: 25px;\n  font-weight: 600;\n  text-decoration: none;\n  color: green;\n\n   &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  font-weight: 400;\n`;\n\nexport const BoxConteiner = styled.div`\n  display: flex;\n  gap: 40px;\n`;\n\nexport const Box = styled.div`\ndisplay: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const Input = styled.input`\n  width: 700px;\n  height: 50px;\n  border-radius: 10px;\n  border: 4px solid green;\n  font-size: 25px;\n`;\n\nexport const Form = styled.form`\n  margin-top: 30px;\n  display: flex;\n  align-content: stretch;\n  justify-content: center;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 50px;\n  border-radius: 10px;\n  border: 4px solid green;\n  background: green;\n  color: orange;\n  font-size: 20px;\n  margin-top: 15px;\n\n  &:hover {\n    color: blue;\n    border: 1px solid black;\n    background: grey;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;"],"names":["BASE_URL","API_KEY","getTrendMovies","axios","data","searchMovies","query","getMoviesDeteils","movieId","getMoviesCredits","getMoviesReviews","Actors","styled","useState","actors","setActors","status","setStatus","error","setError","useParams","cast","useEffect","getActors","message","length","map","el","name","src","profile_path","alt","width","id","List","Conteiner","Linker","Link","Back","Text","BoxConteiner","Box","Input","Form","Button","Label"],"sourceRoot":""}