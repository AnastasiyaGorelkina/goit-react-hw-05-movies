{"version":3,"file":"static/js/961.3845a99f.chunk.js","mappings":"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","sources":["api/api.jsx","components/styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f71bf03a4d080c1adbb88d731b31a8f7';\n\nexport const getTrendMovies = async () => {\n    const { data } = await axios.get(\n        `${BASE_URL}/trending/all/week?api_key=${API_KEY}`\n    );\n    return data;\n};\n\nexport const searchMovies = async query => {\n    const { data } = await axios.get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_abult=false&language=en-US&page=1`\n    );\n    return data;\n};\n\nexport const getMoviesDeteils = async movieId => {\n    const { data } = await axios.get(\n        `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n};\n\nexport const getMoviesCredits = async movieId => {\n    const { data } = await axios.get(\n        `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n};\n\nexport const getMoviesReviews = async movieId => {\n    const { data } = await axios.get(\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n};","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  font-size: 30px;\n  align-items: center;\n`;\n\nexport const Conteiner = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Linker = styled(Link)`\n  font-weight: 600;\n  color: black;\n  text-decoration: none;\n  font-size: 25px;\n  padding: 5px;\n  display: inline-block;\n\n  &:active {\n    color: green;\n  }\n\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n\nexport const Back = styled(Link)`\n  font-size: 25px;\n  font-weight: 600;\n  text-decoration: none;\n  color: green;\n\n   &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  font-weight: 400;\n`;\n\nexport const BoxConteiner = styled.div`\n  display: flex;\n  gap: 40px;\n`;\n\nexport const Box = styled.div`\ndisplay: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const Input = styled.input`\n  width: 700px;\n  height: 50px;\n  border-radius: 10px;\n  border: 4px solid green;\n  font-size: 25px;\n`;\n\nexport const Form = styled.form`\n  margin-top: 30px;\n  display: flex;\n  align-content: stretch;\n  justify-content: center;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 50px;\n  border-radius: 10px;\n  border: 4px solid green;\n  background: green;\n  color: orange;\n  font-size: 20px;\n  margin-top: 15px;\n\n  &:hover {\n    color: blue;\n    border: 1px solid black;\n    background: grey;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;","import { useEffect, useState } from \"react\";\nimport { getMoviesDeteils } from \"api/api\";\nimport { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { Back, Text, BoxConteiner, Box } from \"components/styled\";\n\nconst MovieDetails = () => {\n    const [details, setDetails] = useState('');\n    const [status, setStatus] = useState('pending');\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n    const location = useLocation();\n    const baseUrl = 'https://image.tmdb.org/t/p/w500/';\n    const { title, poster_path, vote_average, overview, genres } = details;\n\n    useEffect(() => {\n        const fetchMovieDetails = async () => {\n            try {\n                const data = await getMoviesDeteils(movieId);\n                setDetails(data);\n                setStatus('resolved');\n            } catch (error) {\n                setStatus('rejected');\n                setError(error);\n            }\n        };\n        fetchMovieDetails(movieId);\n    }, [movieId]);\n\n    const userScore = vote_average ? `${(vote_average * 10).toFixed(0)}%` : 'Not rated yet';\n\n    return (\n        <div>\n            <div>\n                <Back to={location.state?.from ?? '/'}>Go back</Back>\n            </div>\n            {status === 'pending' && 'Loading...'}\n            {status === 'rejected' && <h3>{error.message}</h3>}\n            {status === 'resolved' && (\n                <div>\n                    <BoxConteiner>\n                        <div>\n                            <img src={`${baseUrl}${poster_path}`} alt={title} width=\"400px\" />\n                        </div>\n                        <div>\n                            {<h1>{title}</h1>}\n                            <Text>User Score: {userScore}</Text>\n                            <h2>Overview</h2>\n                            <Text>{overview}</Text>\n                            <h2>Genres</h2>\n                            {genres && genres.map(el => <p key={el.id}>{el.name}</p>)}\n                        </div>\n                    </BoxConteiner>\n                    <Box>\n                        <Text>Additional information</Text>\n                        <Back to=\"cast\">Cast</Back>\n                        <Back to=\"reviews\">Reviews</Back>\n                    </Box>\n                </div>\n            )}\n            <Outlet />\n        </div>\n    );\n};\n\nexport default MovieDetails;"],"names":["BASE_URL","API_KEY","getTrendMovies","axios","data","searchMovies","query","getMoviesDeteils","movieId","getMoviesCredits","getMoviesReviews","List","styled","Conteiner","Linker","Link","Back","Text","BoxConteiner","Box","Input","Form","Button","Label","useState","details","setDetails","status","setStatus","error","setError","useParams","location","useLocation","title","poster_path","vote_average","overview","genres","useEffect","fetchMovieDetails","userScore","toFixed","to","state","from","message","src","alt","width","map","el","name","id"],"sourceRoot":""}